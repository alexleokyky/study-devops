---
- hosts: localhost
  tasks:
    - name: Create docker network
      docker_network:
        name: fmp-net
        ipam_options:
          subnet: '192.168.32.0/24'
          gateway: 192.168.32.1
          iprange: '192.168.32.0/24'
    
    - name: Configure master Postgresql server
      docker_container:
        name: master_db_srv
        image: debian:9
        hostname: master_db_srv
        detach: yes
        tty: yes
        interactive: yes
        restart: yes
        working_dir: /data
        exposed_ports: 
          - 5432
        volumes:
          - ./postgresql:/data:rw 
        networks:
          - name: fmp-net
            ipv4_address: 192.168.32.51

    - name: Configure slave PostgreSQL server
      docker_container:
        name: slave_db_srv 
        image: debian:9
        hostname: master_db_srv
        detach: yes
        tty: yes
        interactive: yes
        restart: yes
        working_dir: /data
        exposed_ports:
          - 5432
        volumes:
          - ./postgresql:/data:rw
        networks:
          - name: fmp-net
            ipv4_address: 192.168.32.50

            #    - name: Configure api server
            #      docker_container:
            #        name: api_server 
            #        image: centos:7
            #        hostname: api_server
            #        detach: yes
            #        tty: yes
            #        interactive: yes
            #        restart: yes
            #        working_dir: /data
            #        exposed_ports:
            #          - 8080
            #        volumes:
            #          - ./api:/data
            #        networks:
            #          - name: fmp-net
            #            ipv4_address: 192.168.32.52
            #
            #    - name: Create frontend container
            #      docker_container:
            #        name: fmp_front
            #        image: centos:7
            #        hostname: fmp_front
            #        detach: yes
            #        tty: yes
            #        interactive: yes
            #        restart: yes
            #        working_dir: /data
            #        published_ports:
            #          - 3000:3000       
            #        volumes:
            #          - ./frontend:/data
            #        networks:
            #          - name: fmp-net
            #            ipv4_address: 192.168.32.53
- hosts: all
  gather_facts: no
  pre_tasks:
    - name: Update repo
      raw: apt-get -y update
    - name: 'install python2'
      raw: apt-get -y install python libpq-dev python-dev python-pip && yes | pip install psycopg2

- hosts: db
  tasks:
    - name: Install PostgreSQL
      apt:
        name: postgresql-9.6
        state: present

- hosts: master_db_srv
  tasks:
    - name: Copy configs
      copy:
        src: "{{ item }}"
        dest: /etc/postgresql/9.6/main/
        owner: postgres
        group: postgres
        mode: 0644
        remote_src: yes
      with_items:
        - /data/master/pg_hba.conf
        - /data/master/postgresql.conf

    - name: Remove old configs
      file:
        path: "{{ item }}"
        state: absent
      with_items:
        - /data/master/main
        - /data/slave/main

    - name: Copy current configs to data dir
      copy:
        src: /etc/postgresql/9.6/main/
        dest: /data/master/main
        mode: preserve
        owner: postgres
        group: postgres

      
    - name: Start Postgresql
      service: name=postgresql state=restarted

    - name: Create postgresql user
      postgresql_user:
        name: developer
        password: md55edc0e8dc716d7f4b4e2ce09de30e6fb
        role_attr_flags: CREATEDB,SUPERUSER

    - name: Create postgresql replication user
      postgresql_user:
        name: replication
        password: md5f29fabe637a472bf5222b12a0bc5df77
        role_attr_flags: CREATEDB,SUPERUSER

    - name: Create fmp_db
      postgresql_db: 
        name: fmp_db
        login_user: developer
        lc_collate: en_US.UTF-8
        lc_ctype: en_US.UTF-8
        encoding: UTF-8
        template: template0
        state: present
        

    - name: Start Postgresql
      service: name=postgresql state=restarted
    - name: Enable Postgresql
      service: name=postgresql state=enabled

- hosts: slave_db_srv
  tasks:
    - name: Copy configs
      copy:
        src: "{{ item }}"
        dest: /etc/postgresql/9.6/main/
        owner: postgres
        group: postgres
        mode: 0700
        remote_src: yes
      with_items:
        - /data/slave/pg_hba.conf
        - /data/slave/postgresql.conf

    - name: remove web dir contents
      file: path=/home/mydata/web/{{ item }} state=absent
      with_fileglob:
        - /etc/postgresql/9.6/main/*
    - name: Connect to master
      command: su - postgres -c "pg_basebackup -h 192.168.32.51 -D /etc/postgresql/9.6/main/ -R -P -d 'host=192.168.32.51 port=5432 dbname=replication user=replication password=replication' --xlog-method=stream"

    - name: Add trigger file line
      lineinfile:
        path: /var/lib/pgsql/9.6/data/recovery.conf
        line: '/var/lib/pgsql/9.6/data/trigger_file'
        state: present
    - name: Start Postgresql
      service: name=postgresql state=restarted

      #- hosts: front
      #  tasks::
      #    - name: Install Remi repo
      #      yum: 
      #        name: "http://rpms.famillecollet.com/enterprise/remi-release-7.rpm"
      #        state: present
      #
      #    - name: Import Remi GPG key
      #      rpm_key:
      #        key: "http://rpms.remirepo.net/RPM-GPG-KEY-remi"
      #        state: present
      #
      #    - name: Install EPEL repo         
      #      yum: name=epel-release state=present
      #
      #      #    - name: Ensure fifewalld is stoped
      #      #  service: name=firewald state=stopped become=yes
      #
      #    - name: Install Node.js and npm
      #      yum: name=npm state=present enablerepo=epel
      #    
      #    - name: Npm install
      #      npm: path=/data
      #
      #    - name: Start server
      #      shell: npm run start &
      #      args: 
      #      chdir: /data
